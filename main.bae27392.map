{"version":3,"sources":["node_modules/stickyfilljs/dist/stickyfill.js","src/utils/index.js","src/utils/load-article.js","src/main.js"],"names":["wait","time","Promise","resolve","setTimeout","throwError","err","Error","$","document","querySelector","bind","$$","selector","querySelectorAll","debounce","fn","timeout","args","clearTimeout","apply","shrugMappings","Map","shrug","name","has","console","log","get","delete","updateHash","hash","history","replaceState","title","loadArticle","queue","articles","map","element","index","id","path","inViewport","findArticle","target","find","insertToDom","article","fromObserver","all","fetch","then","response","text","html","getAttribute","innerHTML","addOne","setAttribute","loadArticleIfNeeded","options","isLoaded","startScrollObserver","handleIntersection","articleObserver","IntersectionObserver","entries","forEach","entry","isIntersecting","visibleArticle","location","rootMargin","observe","targetArticle","articlesToLoad","filter","_","error","init","Boolean","window","navigator","maxTouchPoints","msMaxTouchPoints","DocumentTouch","body","classList","add","updateWindowHeight","vh","innerHeight","documentElement","style","setProperty","addEventListener","splash","main","scrollIntoView","behavior","block","targetId","slice","remove","refreshAll","getElementById","onload"],"mappings":"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","file":"main.bae27392.map","sourceRoot":"..","sourcesContent":["/*!\r\n  * Stickyfill – `position: sticky` polyfill\r\n  * v. 2.1.0 | https://github.com/wilddeer/stickyfill\r\n  * MIT License\r\n  */\r\n\r\n;(function(window, document) {\r\n    'use strict';\r\n    \r\n    /*\r\n     * 1. Check if the browser supports `position: sticky` natively or is too old to run the polyfill.\r\n     *    If either of these is the case set `seppuku` flag. It will be checked later to disable key features\r\n     *    of the polyfill, but the API will remain functional to avoid breaking things.\r\n     */\r\n    \r\n    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n    \r\n    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n    \r\n    var seppuku = false;\r\n    \r\n    var isWindowDefined = typeof window !== 'undefined';\r\n    \r\n    // The polyfill can’t function properly without `window` or `window.getComputedStyle`.\r\n    if (!isWindowDefined || !window.getComputedStyle) seppuku = true;\r\n    // Dont’t get in a way if the browser supports `position: sticky` natively.\r\n    else {\r\n            (function () {\r\n                var testNode = document.createElement('div');\r\n    \r\n                if (['', '-webkit-', '-moz-', '-ms-'].some(function (prefix) {\r\n                    try {\r\n                        testNode.style.position = prefix + 'sticky';\r\n                    } catch (e) {}\r\n    \r\n                    return testNode.style.position != '';\r\n                })) seppuku = true;\r\n            })();\r\n        }\r\n    \r\n    /*\r\n     * 2. “Global” vars used across the polyfill\r\n     */\r\n    var isInitialized = false;\r\n    \r\n    // Check if Shadow Root constructor exists to make further checks simpler\r\n    var shadowRootExists = typeof ShadowRoot !== 'undefined';\r\n    \r\n    // Last saved scroll position\r\n    var scroll = {\r\n        top: null,\r\n        left: null\r\n    };\r\n    \r\n    // Array of created Sticky instances\r\n    var stickies = [];\r\n    \r\n    /*\r\n     * 3. Utility functions\r\n     */\r\n    function extend(targetObj, sourceObject) {\r\n        for (var key in sourceObject) {\r\n            if (sourceObject.hasOwnProperty(key)) {\r\n                targetObj[key] = sourceObject[key];\r\n            }\r\n        }\r\n    }\r\n    \r\n    function parseNumeric(val) {\r\n        return parseFloat(val) || 0;\r\n    }\r\n    \r\n    function getDocOffsetTop(node) {\r\n        var docOffsetTop = 0;\r\n    \r\n        while (node) {\r\n            docOffsetTop += node.offsetTop;\r\n            node = node.offsetParent;\r\n        }\r\n    \r\n        return docOffsetTop;\r\n    }\r\n    \r\n    /*\r\n     * 4. Sticky class\r\n     */\r\n    \r\n    var Sticky = function () {\r\n        function Sticky(node) {\r\n            _classCallCheck(this, Sticky);\r\n    \r\n            if (!(node instanceof HTMLElement)) throw new Error('First argument must be HTMLElement');\r\n            if (stickies.some(function (sticky) {\r\n                return sticky._node === node;\r\n            })) throw new Error('Stickyfill is already applied to this node');\r\n    \r\n            this._node = node;\r\n            this._stickyMode = null;\r\n            this._active = false;\r\n    \r\n            stickies.push(this);\r\n    \r\n            this.refresh();\r\n        }\r\n    \r\n        _createClass(Sticky, [{\r\n            key: 'refresh',\r\n            value: function refresh() {\r\n                if (seppuku || this._removed) return;\r\n                if (this._active) this._deactivate();\r\n    \r\n                var node = this._node;\r\n    \r\n                /*\r\n                 * 1. Save node computed props\r\n                 */\r\n                var nodeComputedStyle = getComputedStyle(node);\r\n                var nodeComputedProps = {\r\n                    position: nodeComputedStyle.position,\r\n                    top: nodeComputedStyle.top,\r\n                    display: nodeComputedStyle.display,\r\n                    marginTop: nodeComputedStyle.marginTop,\r\n                    marginBottom: nodeComputedStyle.marginBottom,\r\n                    marginLeft: nodeComputedStyle.marginLeft,\r\n                    marginRight: nodeComputedStyle.marginRight,\r\n                    cssFloat: nodeComputedStyle.cssFloat\r\n                };\r\n    \r\n                /*\r\n                 * 2. Check if the node can be activated\r\n                 */\r\n                if (isNaN(parseFloat(nodeComputedProps.top)) || nodeComputedProps.display == 'table-cell' || nodeComputedProps.display == 'none') return;\r\n    \r\n                this._active = true;\r\n    \r\n                /*\r\n                 * 3. Check if the current node position is `sticky`. If it is, it means that the browser supports sticky positioning,\r\n                 *    but the polyfill was force-enabled. We set the node’s position to `static` before continuing, so that the node\r\n                 *    is in it’s initial position when we gather its params.\r\n                 */\r\n                var originalPosition = node.style.position;\r\n                if (nodeComputedStyle.position == 'sticky' || nodeComputedStyle.position == '-webkit-sticky') node.style.position = 'static';\r\n    \r\n                /*\r\n                 * 4. Get necessary node parameters\r\n                 */\r\n                var referenceNode = node.parentNode;\r\n                var parentNode = shadowRootExists && referenceNode instanceof ShadowRoot ? referenceNode.host : referenceNode;\r\n                var nodeWinOffset = node.getBoundingClientRect();\r\n                var parentWinOffset = parentNode.getBoundingClientRect();\r\n                var parentComputedStyle = getComputedStyle(parentNode);\r\n    \r\n                this._parent = {\r\n                    node: parentNode,\r\n                    styles: {\r\n                        position: parentNode.style.position\r\n                    },\r\n                    offsetHeight: parentNode.offsetHeight\r\n                };\r\n                this._offsetToWindow = {\r\n                    left: nodeWinOffset.left,\r\n                    right: document.documentElement.clientWidth - nodeWinOffset.right\r\n                };\r\n                this._offsetToParent = {\r\n                    top: nodeWinOffset.top - parentWinOffset.top - parseNumeric(parentComputedStyle.borderTopWidth),\r\n                    left: nodeWinOffset.left - parentWinOffset.left - parseNumeric(parentComputedStyle.borderLeftWidth),\r\n                    right: -nodeWinOffset.right + parentWinOffset.right - parseNumeric(parentComputedStyle.borderRightWidth)\r\n                };\r\n                this._styles = {\r\n                    position: originalPosition,\r\n                    top: node.style.top,\r\n                    bottom: node.style.bottom,\r\n                    left: node.style.left,\r\n                    right: node.style.right,\r\n                    width: node.style.width,\r\n                    marginTop: node.style.marginTop,\r\n                    marginLeft: node.style.marginLeft,\r\n                    marginRight: node.style.marginRight\r\n                };\r\n    \r\n                var nodeTopValue = parseNumeric(nodeComputedProps.top);\r\n                this._limits = {\r\n                    start: nodeWinOffset.top + window.pageYOffset - nodeTopValue,\r\n                    end: parentWinOffset.top + window.pageYOffset + parentNode.offsetHeight - parseNumeric(parentComputedStyle.borderBottomWidth) - node.offsetHeight - nodeTopValue - parseNumeric(nodeComputedProps.marginBottom)\r\n                };\r\n    \r\n                /*\r\n                 * 5. Ensure that the node will be positioned relatively to the parent node\r\n                 */\r\n                var parentPosition = parentComputedStyle.position;\r\n    \r\n                if (parentPosition != 'absolute' && parentPosition != 'relative') {\r\n                    parentNode.style.position = 'relative';\r\n                }\r\n    \r\n                /*\r\n                 * 6. Recalc node position.\r\n                 *    It’s important to do this before clone injection to avoid scrolling bug in Chrome.\r\n                 */\r\n                this._recalcPosition();\r\n    \r\n                /*\r\n                 * 7. Create a clone\r\n                 */\r\n                var clone = this._clone = {};\r\n                clone.node = document.createElement('div');\r\n    \r\n                // Apply styles to the clone\r\n                extend(clone.node.style, {\r\n                    width: nodeWinOffset.right - nodeWinOffset.left + 'px',\r\n                    height: nodeWinOffset.bottom - nodeWinOffset.top + 'px',\r\n                    marginTop: nodeComputedProps.marginTop,\r\n                    marginBottom: nodeComputedProps.marginBottom,\r\n                    marginLeft: nodeComputedProps.marginLeft,\r\n                    marginRight: nodeComputedProps.marginRight,\r\n                    cssFloat: nodeComputedProps.cssFloat,\r\n                    padding: 0,\r\n                    border: 0,\r\n                    borderSpacing: 0,\r\n                    fontSize: '1em',\r\n                    position: 'static'\r\n                });\r\n    \r\n                referenceNode.insertBefore(clone.node, node);\r\n                clone.docOffsetTop = getDocOffsetTop(clone.node);\r\n            }\r\n        }, {\r\n            key: '_recalcPosition',\r\n            value: function _recalcPosition() {\r\n                if (!this._active || this._removed) return;\r\n    \r\n                var stickyMode = scroll.top <= this._limits.start ? 'start' : scroll.top >= this._limits.end ? 'end' : 'middle';\r\n    \r\n                if (this._stickyMode == stickyMode) return;\r\n    \r\n                switch (stickyMode) {\r\n                    case 'start':\r\n                        extend(this._node.style, {\r\n                            position: 'absolute',\r\n                            left: this._offsetToParent.left + 'px',\r\n                            right: this._offsetToParent.right + 'px',\r\n                            top: this._offsetToParent.top + 'px',\r\n                            bottom: 'auto',\r\n                            width: 'auto',\r\n                            marginLeft: 0,\r\n                            marginRight: 0,\r\n                            marginTop: 0\r\n                        });\r\n                        break;\r\n    \r\n                    case 'middle':\r\n                        extend(this._node.style, {\r\n                            position: 'fixed',\r\n                            left: this._offsetToWindow.left + 'px',\r\n                            right: this._offsetToWindow.right + 'px',\r\n                            top: this._styles.top,\r\n                            bottom: 'auto',\r\n                            width: 'auto',\r\n                            marginLeft: 0,\r\n                            marginRight: 0,\r\n                            marginTop: 0\r\n                        });\r\n                        break;\r\n    \r\n                    case 'end':\r\n                        extend(this._node.style, {\r\n                            position: 'absolute',\r\n                            left: this._offsetToParent.left + 'px',\r\n                            right: this._offsetToParent.right + 'px',\r\n                            top: 'auto',\r\n                            bottom: 0,\r\n                            width: 'auto',\r\n                            marginLeft: 0,\r\n                            marginRight: 0\r\n                        });\r\n                        break;\r\n                }\r\n    \r\n                this._stickyMode = stickyMode;\r\n            }\r\n        }, {\r\n            key: '_fastCheck',\r\n            value: function _fastCheck() {\r\n                if (!this._active || this._removed) return;\r\n    \r\n                if (Math.abs(getDocOffsetTop(this._clone.node) - this._clone.docOffsetTop) > 1 || Math.abs(this._parent.node.offsetHeight - this._parent.offsetHeight) > 1) this.refresh();\r\n            }\r\n        }, {\r\n            key: '_deactivate',\r\n            value: function _deactivate() {\r\n                var _this = this;\r\n    \r\n                if (!this._active || this._removed) return;\r\n    \r\n                this._clone.node.parentNode.removeChild(this._clone.node);\r\n                delete this._clone;\r\n    \r\n                extend(this._node.style, this._styles);\r\n                delete this._styles;\r\n    \r\n                // Check whether element’s parent node is used by other stickies.\r\n                // If not, restore parent node’s styles.\r\n                if (!stickies.some(function (sticky) {\r\n                    return sticky !== _this && sticky._parent && sticky._parent.node === _this._parent.node;\r\n                })) {\r\n                    extend(this._parent.node.style, this._parent.styles);\r\n                }\r\n                delete this._parent;\r\n    \r\n                this._stickyMode = null;\r\n                this._active = false;\r\n    \r\n                delete this._offsetToWindow;\r\n                delete this._offsetToParent;\r\n                delete this._limits;\r\n            }\r\n        }, {\r\n            key: 'remove',\r\n            value: function remove() {\r\n                var _this2 = this;\r\n    \r\n                this._deactivate();\r\n    \r\n                stickies.some(function (sticky, index) {\r\n                    if (sticky._node === _this2._node) {\r\n                        stickies.splice(index, 1);\r\n                        return true;\r\n                    }\r\n                });\r\n    \r\n                this._removed = true;\r\n            }\r\n        }]);\r\n    \r\n        return Sticky;\r\n    }();\r\n    \r\n    /*\r\n     * 5. Stickyfill API\r\n     */\r\n    \r\n    \r\n    var Stickyfill = {\r\n        stickies: stickies,\r\n        Sticky: Sticky,\r\n    \r\n        forceSticky: function forceSticky() {\r\n            seppuku = false;\r\n            init();\r\n    \r\n            this.refreshAll();\r\n        },\r\n        addOne: function addOne(node) {\r\n            // Check whether it’s a node\r\n            if (!(node instanceof HTMLElement)) {\r\n                // Maybe it’s a node list of some sort?\r\n                // Take first node from the list then\r\n                if (node.length && node[0]) node = node[0];else return;\r\n            }\r\n    \r\n            // Check if Stickyfill is already applied to the node\r\n            // and return existing sticky\r\n            for (var i = 0; i < stickies.length; i++) {\r\n                if (stickies[i]._node === node) return stickies[i];\r\n            }\r\n    \r\n            // Create and return new sticky\r\n            return new Sticky(node);\r\n        },\r\n        add: function add(nodeList) {\r\n            // If it’s a node make an array of one node\r\n            if (nodeList instanceof HTMLElement) nodeList = [nodeList];\r\n            // Check if the argument is an iterable of some sort\r\n            if (!nodeList.length) return;\r\n    \r\n            // Add every element as a sticky and return an array of created Sticky instances\r\n            var addedStickies = [];\r\n    \r\n            var _loop = function _loop(i) {\r\n                var node = nodeList[i];\r\n    \r\n                // If it’s not an HTMLElement – create an empty element to preserve 1-to-1\r\n                // correlation with input list\r\n                if (!(node instanceof HTMLElement)) {\r\n                    addedStickies.push(void 0);\r\n                    return 'continue';\r\n                }\r\n    \r\n                // If Stickyfill is already applied to the node\r\n                // add existing sticky\r\n                if (stickies.some(function (sticky) {\r\n                    if (sticky._node === node) {\r\n                        addedStickies.push(sticky);\r\n                        return true;\r\n                    }\r\n                })) return 'continue';\r\n    \r\n                // Create and add new sticky\r\n                addedStickies.push(new Sticky(node));\r\n            };\r\n    \r\n            for (var i = 0; i < nodeList.length; i++) {\r\n                var _ret2 = _loop(i);\r\n    \r\n                if (_ret2 === 'continue') continue;\r\n            }\r\n    \r\n            return addedStickies;\r\n        },\r\n        refreshAll: function refreshAll() {\r\n            stickies.forEach(function (sticky) {\r\n                return sticky.refresh();\r\n            });\r\n        },\r\n        removeOne: function removeOne(node) {\r\n            // Check whether it’s a node\r\n            if (!(node instanceof HTMLElement)) {\r\n                // Maybe it’s a node list of some sort?\r\n                // Take first node from the list then\r\n                if (node.length && node[0]) node = node[0];else return;\r\n            }\r\n    \r\n            // Remove the stickies bound to the nodes in the list\r\n            stickies.some(function (sticky) {\r\n                if (sticky._node === node) {\r\n                    sticky.remove();\r\n                    return true;\r\n                }\r\n            });\r\n        },\r\n        remove: function remove(nodeList) {\r\n            // If it’s a node make an array of one node\r\n            if (nodeList instanceof HTMLElement) nodeList = [nodeList];\r\n            // Check if the argument is an iterable of some sort\r\n            if (!nodeList.length) return;\r\n    \r\n            // Remove the stickies bound to the nodes in the list\r\n    \r\n            var _loop2 = function _loop2(i) {\r\n                var node = nodeList[i];\r\n    \r\n                stickies.some(function (sticky) {\r\n                    if (sticky._node === node) {\r\n                        sticky.remove();\r\n                        return true;\r\n                    }\r\n                });\r\n            };\r\n    \r\n            for (var i = 0; i < nodeList.length; i++) {\r\n                _loop2(i);\r\n            }\r\n        },\r\n        removeAll: function removeAll() {\r\n            while (stickies.length) {\r\n                stickies[0].remove();\r\n            }\r\n        }\r\n    };\r\n    \r\n    /*\r\n     * 6. Setup events (unless the polyfill was disabled)\r\n     */\r\n    function init() {\r\n        if (isInitialized) {\r\n            return;\r\n        }\r\n    \r\n        isInitialized = true;\r\n    \r\n        // Watch for scroll position changes and trigger recalc/refresh if needed\r\n        function checkScroll() {\r\n            if (window.pageXOffset != scroll.left) {\r\n                scroll.top = window.pageYOffset;\r\n                scroll.left = window.pageXOffset;\r\n    \r\n                Stickyfill.refreshAll();\r\n            } else if (window.pageYOffset != scroll.top) {\r\n                scroll.top = window.pageYOffset;\r\n                scroll.left = window.pageXOffset;\r\n    \r\n                // recalc position for all stickies\r\n                stickies.forEach(function (sticky) {\r\n                    return sticky._recalcPosition();\r\n                });\r\n            }\r\n        }\r\n    \r\n        checkScroll();\r\n        window.addEventListener('scroll', checkScroll);\r\n    \r\n        // Watch for window resizes and device orientation changes and trigger refresh\r\n        window.addEventListener('resize', Stickyfill.refreshAll);\r\n        window.addEventListener('orientationchange', Stickyfill.refreshAll);\r\n    \r\n        //Fast dirty check for layout changes every 500ms\r\n        var fastCheckTimer = void 0;\r\n    \r\n        function startFastCheckTimer() {\r\n            fastCheckTimer = setInterval(function () {\r\n                stickies.forEach(function (sticky) {\r\n                    return sticky._fastCheck();\r\n                });\r\n            }, 500);\r\n        }\r\n    \r\n        function stopFastCheckTimer() {\r\n            clearInterval(fastCheckTimer);\r\n        }\r\n    \r\n        var docHiddenKey = void 0;\r\n        var visibilityChangeEventName = void 0;\r\n    \r\n        if ('hidden' in document) {\r\n            docHiddenKey = 'hidden';\r\n            visibilityChangeEventName = 'visibilitychange';\r\n        } else if ('webkitHidden' in document) {\r\n            docHiddenKey = 'webkitHidden';\r\n            visibilityChangeEventName = 'webkitvisibilitychange';\r\n        }\r\n    \r\n        if (visibilityChangeEventName) {\r\n            if (!document[docHiddenKey]) startFastCheckTimer();\r\n    \r\n            document.addEventListener(visibilityChangeEventName, function () {\r\n                if (document[docHiddenKey]) {\r\n                    stopFastCheckTimer();\r\n                } else {\r\n                    startFastCheckTimer();\r\n                }\r\n            });\r\n        } else startFastCheckTimer();\r\n    }\r\n    \r\n    if (!seppuku) init();\r\n    \r\n    /*\r\n     * 7. Expose Stickyfill\r\n     */\r\n    if (typeof module != 'undefined' && module.exports) {\r\n        module.exports = Stickyfill;\r\n    } else if (isWindowDefined) {\r\n        window.Stickyfill = Stickyfill;\r\n    }\r\n    \r\n})(window, document);","/**\r\n * Returned eine Promise, die sich nach gegebener Zeit selbst erfüllt\r\n * @param {number} time Zeit, bis Promise resolved\r\n */\r\nexport const wait = time => new Promise(resolve => setTimeout(resolve, time));\r\n\r\n/**\r\n * Nimmt Error Message und wirft einen Fehler\r\n * @param {string} err Fehlermeldung\r\n */\r\nexport const throwError = err => {\r\n  throw Error(err);\r\n};\r\n\r\n/**\r\n * Alias zu querySelector(), nimmt CSS Selektor, liefert HTML Element oder null\r\n * @type {Function}\r\n * @param {string} selector CSS3 Selektor\r\n * @returns {HTMLElement|null} Element oder Array aus Elementen\r\n */\r\nexport const $ = document.querySelector.bind(document);\r\n/**\r\n * Wrapper um querySelectorAll(), liefert Array statt NodeList\r\n * @param {string} selector CSS3 Selektor\r\n * @returns {Array<HTMLElement>} Array aus gefundenen Elementen\r\n */\r\nexport const $$ = selector => [...document.querySelectorAll(selector)];\r\n\r\n/**\r\n * Führt eine Funktion erst aus, wenn sie eine Zeit lang nicht ausgeführt wurde\r\n * @param {Function} fn Funktion, die debounced werden soll\r\n * @param {number} wait Zeit, die vergangen sein muss bevor fn ausgeführt wird\r\n */\r\nexport const debounce = (fn, wait = 0) => {\r\n  let timeout;\r\n\r\n  return function(...args) {\r\n    const later = () => {\r\n      timeout = null;\r\n      fn.apply(this, args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n};\r\n\r\nconst shrugMappings = new Map([\r\n  // Artikel:\r\n  ['zwischen-seemannsgarn-und-strandgut', `🍺 Kneipentour, for science.`],\r\n  ['bringt-farbe-in-die-stadt', `⚽ Abenteuer in den Graffitiburgen.`],\r\n  ['film-ab-bheaven', `🛰 Doch gab es die Mondlandung wirklich?`],\r\n  ['back-to-print', `🍪 Aber Print hat keine Cookies.`],\r\n  ['projekt-antarktis', `🐧 Pengwings.`],\r\n  [\r\n    'wie-ki-die-designwelt-aendert',\r\n    `🔴 I'm afraid I can't let you do that, Dave.`,\r\n  ],\r\n  // Team\r\n  ['jonas', '✔ Perfekt, trotz Serifen.'],\r\n  ['max', '✔ Ist Photoshop, nicht Paint.'],\r\n]);\r\n\r\nexport const shrug = name => {\r\n  if (!shrugMappings.has(name)) return;\r\n\r\n  console.log(`\\n${shrugMappings.get(name)}`);\r\n  shrugMappings.delete(name);\r\n};\r\n\r\nexport const updateHash = debounce(hash => {\r\n  if (history.replaceState) {\r\n    shrug(hash);\r\n    history.replaceState(null, document.title, `#${hash}`);\r\n  }\r\n}, 500);\r\n","import { $$, wait, updateHash } from './';\r\nimport Stickyfill from 'stickyfilljs';\r\nlet queue = Promise.resolve();\r\n\r\n// Array, mit einem Objekt für jeden Artikel\r\nconst articles = $$('.article').map((element, index) => ({\r\n  element,\r\n  index,\r\n  name: element.id,\r\n  path: `./articles/${element.id}.html`,\r\n  inViewport: false,\r\n}));\r\n\r\n// Liefert Artikel-Objekt anhand von Index oder Artikelname\r\nconst findArticle = target => {\r\n  return typeof target === 'number'\r\n    ? articles[target]\r\n    : articles.find(({ name }) => name === target);\r\n};\r\n\r\nconst insertToDom = async (article, { fromObserver } = {}) => {\r\n  const { path, element } = article;\r\n\r\n  // Warten bis HTML des Artikels abgerufen und ggf. Wartezeit vorbei ist\r\n  const [html] = await Promise.all([\r\n    fetch(path).then(response => response.text()),\r\n    fromObserver && wait(1200),\r\n  ]);\r\n\r\n  // Artikel inzwischen schon (parallel) fertig geladen? Abbrechen\r\n  if (element.getAttribute('data-loaded') === 'true') return;\r\n\r\n  // Artikel in DOM einfügen\r\n  element.innerHTML = html;\r\n\r\n  // Neu hinzugefügte Artikel-Nummer polyfillen\r\n  Stickyfill.addOne(element.querySelectorAll('.stickyfill'));\r\n\r\n  // Als geladen markieren\r\n  element.setAttribute('data-loaded', true);\r\n\r\n  return;\r\n};\r\n\r\nconst loadArticleIfNeeded = (article, options = {}) => {\r\n  // Schon geladen: Sofort returnen, nothing to do here...\r\n  const isLoaded = article.element.getAttribute('data-loaded') === 'true';\r\n  if (isLoaded) return;\r\n\r\n  // Laden durch Observer: Warten bis Laden früherer Artikel (queue) fertig,\r\n  // dann laden, falls Artikel immer noch im Viewport ist\r\n  // -> stoppt gleichzeitiges Laden mehrerer Artikel bei zu schnellem Scrollen\r\n  if (options.fromObserver) {\r\n    return (queue = queue.then(() => {\r\n      // wird erst ausgeführt, nachdem alle anderen Funktionen,\r\n      // die per queue = queue.then() angehängt wurden, beendet sind\r\n      article.inViewport && insertToDom(article, options);\r\n    }));\r\n  }\r\n\r\n  // Laden nicht von Observer angefordert: Sofort starten\r\n  return insertToDom(article);\r\n};\r\n\r\nfunction startScrollObserver() {\r\n  // Artikel laden, falls Observer eine Veränderung meldet & Artikel sichtbar\r\n  const handleIntersection = entries => {\r\n    entries.forEach(entry => {\r\n      const article = findArticle(entry.target.id);\r\n      article.inViewport = entry.isIntersecting;\r\n\r\n      if (article.inViewport) {\r\n        // Hash updaten, damit URL direkt auf Artikel verweist\r\n        updateHash(article.name);\r\n        loadArticleIfNeeded(article, { fromObserver: true });\r\n      } else {\r\n        const visibleArticle = articles.find(({ inViewport }) => inViewport);\r\n        // Kein einziger Artikel sichtbar, aber aktuell ein Hash gesetzt? Reset\r\n        // Ansonsten: Hash auf (noch) sichtbaren Artikel aktualisieren\r\n        if (!visibleArticle) location.hash && updateHash('');\r\n        else updateHash(visibleArticle.name);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Beobachtet jeden Artikel im articles array auf Sichtbarkeitsänderungen\r\n  const options = { rootMargin: '-1px 0px' };\r\n  const articleObserver = new IntersectionObserver(handleIntersection, options);\r\n  articles.forEach(({ element }) => articleObserver.observe(element));\r\n}\r\n\r\nasync function loadArticle(target) {\r\n  const targetArticle = findArticle(target);\r\n  if (!targetArticle) return;\r\n\r\n  // Artikel + alle Artikel oberhalb (index kleiner/gleich Zielartikel) laden\r\n  const articlesToLoad = articles\r\n    .filter((_, index) => index <= targetArticle.index)\r\n    .map(loadArticleIfNeeded);\r\n\r\n  try {\r\n    // Warten, bis alle Artikel geladen sind\r\n    await Promise.all(articlesToLoad);\r\n  } catch (error) {\r\n    return console.error(\r\n      `Fehler beim Laden des Artikels ${targetArticle.name}: ${error}`,\r\n    );\r\n  }\r\n\r\n  return targetArticle;\r\n}\r\n\r\nexport { startScrollObserver, loadArticle };\r\nexport default loadArticle;\r\n","import Stickyfill from 'stickyfilljs';\r\n\r\nimport { $, debounce } from './utils';\r\nimport { startScrollObserver, loadArticle } from './utils/load-article';\r\n\r\nasync function init() {\r\n  // Prüfen, ob Gerät ein Touch-Interface hat\r\n  const deviceSupportsTouch = Boolean(\r\n    'ontouchstart' in window ||\r\n      window.navigator.maxTouchPoints > 0 ||\r\n      window.navigator.msMaxTouchPoints > 0 ||\r\n      (window.DocumentTouch && document instanceof DocumentTouch),\r\n  );\r\n  if (deviceSupportsTouch) document.body.classList.add('supports-touch');\r\n\r\n  // Mobile Viewport-Größe manuell berechnen, vgl.:\r\n  // https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\r\n  const updateWindowHeight = () => {\r\n    const vh = window.innerHeight * 0.01;\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n  };\r\n  updateWindowHeight();\r\n  window.addEventListener('resize', debounce(updateWindowHeight, 500));\r\n\r\n  // HTML Elemente\r\n  const splash = $('.js-splash');\r\n  const main = $('.js-main');\r\n\r\n  // Bei Klick auf Splashscreen zu Content scrollen\r\n  splash.addEventListener('click', () => {\r\n    main.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n  });\r\n\r\n  const { hash } = window.location;\r\n  const targetId = hash.slice(1);\r\n  const targetArticle = await loadArticle(targetId);\r\n  if (!targetArticle) await loadArticle(0);\r\n\r\n  document.body.classList.remove('empty');\r\n  startScrollObserver();\r\n  Stickyfill.refreshAll();\r\n\r\n  if (targetArticle) {\r\n    targetArticle.element.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'start',\r\n    });\r\n  }\r\n\r\n  window.addEventListener('hashchange', async () => {\r\n    const { hash } = window.location;\r\n    const targetId = hash.slice(1);\r\n    const target = document.getElementById(targetId);\r\n    if (target && target.getAttribute('data-loaded') === 'false') {\r\n      const article = await loadArticle(window.location.hash.slice(1));\r\n      if (!article) return;\r\n      article.element.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n    }\r\n  });\r\n}\r\n\r\n// Go!\r\nwindow.onload = init;\r\n"]}