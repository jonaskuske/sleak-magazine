{"version":3,"sources":["src/utils/index.js","src/team.js"],"names":["wait","time","Promise","resolve","setTimeout","throwError","err","Error","$","document","querySelector","bind","$$","selector","querySelectorAll","debounce","fn","timeout","args","clearTimeout","apply","shrugMappings","Map","shrug","name","has","console","log","get","delete","updateHash","hash","history","replaceState","title","options","rootMargin","Math","floor","window","innerHeight","handleIntersection","entries","forEach","target","isIntersecting","id","classList","add","teamObserver","IntersectionObserver","observeTeamMember","observe"],"mappings":";AAqEO,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,mDAAA,SAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,QAAA,MAAA,QAAA,SAAA,QAAA,GAAA,QAAA,EAAA,QAAA,WAAA,QAAA,UAAA,EAjEA,IAAMA,EAAO,SAAAC,GAAQ,OAAA,IAAIC,QAAQ,SAAAC,GAAWC,OAAAA,WAAWD,EAASF,MAiEhE,QAAA,KAAA,EA3DA,IAAMI,EAAa,SAAAC,GAClBC,MAAAA,MAAMD,IA0DP,QAAA,WAAA,EAjDA,IAAME,EAAIC,SAASC,cAAcC,KAAKF,UAiDtC,QAAA,EAAA,EA3CA,IAAMG,EAAK,SAAAC,GAAgBJ,OAAAA,EAAAA,SAASK,iBAAiBD,KA2CrD,QAAA,GAAA,EApCA,IAAME,EAAW,SAACC,GAAIhB,IACvBiB,EADuBjB,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAG3B,OAAA,WAAYkB,IAAM,IAAA,EAAA,KAANA,EAAAA,UAAAA,OAAAA,EAAM,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAANA,EAAM,GAAA,UAAA,GAKvBC,aAAaF,GACbA,EAAUb,WALI,WACZa,EAAU,KACVD,EAAGI,MAAM,EAAMF,IAGWlB,KA2BzB,QAAA,SAAA,EAvBP,IAAMqB,EAAgB,IAAIC,IAAI,CAE5B,CAAC,sCAF2B,gCAG5B,CAAC,4BAH2B,sCAI5B,CAAC,kBAJ2B,4CAK5B,CAAC,gBAL2B,oCAM5B,CAAC,oBAN2B,iBAO5B,CACE,gCAR0B,gDAY5B,CAAC,QAAS,6BACV,CAAC,MAAO,mCAGGC,EAAQ,SAAAC,GACdH,EAAcI,IAAID,KAEvBE,QAAQC,IAASN,KAAAA,OAAAA,EAAcO,IAAIJ,KACnCH,EAAcQ,OAAOL,KAGhB,QAAA,MAAA,EAAA,IAAMM,EAAaf,EAAS,SAAAgB,GAC7BC,QAAQC,eACVV,EAAMQ,GACNC,QAAQC,aAAa,KAAMxB,SAASyB,MAAWH,IAAAA,OAAAA,MAEhD,KALI,QAAA,WAAA;;ACtDP,aAdA,IAAA,EAAA,QAAA,WAEMI,EAAU,CAAEC,WAAgBC,IAAAA,OAAAA,KAAKC,MAAMC,OAAOC,YAAc,GAAtC,WACtBC,EAAqB,SAAAC,GACzBA,EAAQC,QAAQ,SAAgC,GAA7BC,IAAAA,EAAAA,EAAAA,OAAQC,EAAAA,kBAEZD,EAAAA,EAAAA,YAAAA,EAAOE,IAClBF,EAAOG,UAAUC,IAAI,kBAKrBC,EAAe,IAAIC,qBAAqBT,EAAoBN,GAC5DgB,EAAoBF,EAAaG,QAAQzC,KAAKsC,GACpDxC,SAASK,iBAAiB,WAAW6B,QAAQQ","file":"team.d7c9d7ae.map","sourceRoot":"..","sourcesContent":["/**\r\n * Returned eine Promise, die sich nach gegebener Zeit selbst erfüllt\r\n * @param {number} time Zeit, bis Promise resolved\r\n */\r\nexport const wait = time => new Promise(resolve => setTimeout(resolve, time));\r\n\r\n/**\r\n * Nimmt Error Message und wirft einen Fehler\r\n * @param {string} err Fehlermeldung\r\n */\r\nexport const throwError = err => {\r\n  throw Error(err);\r\n};\r\n\r\n/**\r\n * Alias zu querySelector(), nimmt CSS Selektor, liefert HTML Element oder null\r\n * @type {Function}\r\n * @param {string} selector CSS3 Selektor\r\n * @returns {HTMLElement|null} Element oder Array aus Elementen\r\n */\r\nexport const $ = document.querySelector.bind(document);\r\n/**\r\n * Wrapper um querySelectorAll(), liefert Array statt NodeList\r\n * @param {string} selector CSS3 Selektor\r\n * @returns {Array<HTMLElement>} Array aus gefundenen Elementen\r\n */\r\nexport const $$ = selector => [...document.querySelectorAll(selector)];\r\n\r\n/**\r\n * Führt eine Funktion erst aus, wenn sie eine Zeit lang nicht ausgeführt wurde\r\n * @param {Function} fn Funktion, die debounced werden soll\r\n * @param {number} wait Zeit, die vergangen sein muss bevor fn ausgeführt wird\r\n */\r\nexport const debounce = (fn, wait = 0) => {\r\n  let timeout;\r\n\r\n  return function(...args) {\r\n    const later = () => {\r\n      timeout = null;\r\n      fn.apply(this, args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n};\r\n\r\nconst shrugMappings = new Map([\r\n  // Artikel:\r\n  ['zwischen-seemannsgarn-und-strandgut', `🍺 Kneipentour, for science.`],\r\n  ['bringt-farbe-in-die-stadt', `⚽ Abenteuer in den Graffitiburgen.`],\r\n  ['film-ab-bheaven', `🛰 Doch gab es die Mondlandung wirklich?`],\r\n  ['back-to-print', `🍪 Aber Print hat keine Cookies.`],\r\n  ['projekt-antarktis', `🐧 Pengwings.`],\r\n  [\r\n    'wie-ki-die-designwelt-aendert',\r\n    `🔴 I'm afraid I can't let you do that, Dave.`,\r\n  ],\r\n  // Team\r\n  ['jonas', '✔ Perfekt, trotz Serifen.'],\r\n  ['max', '✔ Ist Photoshop, nicht Paint.'],\r\n]);\r\n\r\nexport const shrug = name => {\r\n  if (!shrugMappings.has(name)) return;\r\n\r\n  console.log(`\\n${shrugMappings.get(name)}`);\r\n  shrugMappings.delete(name);\r\n};\r\n\r\nexport const updateHash = debounce(hash => {\r\n  if (history.replaceState) {\r\n    shrug(hash);\r\n    history.replaceState(null, document.title, `#${hash}`);\r\n  }\r\n}, 500);\r\n","// import './utils/appshell';\r\nimport { updateHash } from './utils';\r\n\r\nconst options = { rootMargin: `-${Math.floor(window.innerHeight / 2)}px 0px` };\r\nconst handleIntersection = entries => {\r\n  entries.forEach(({ target, isIntersecting }) => {\r\n    if (isIntersecting) {\r\n      updateHash(target.id);\r\n      target.classList.add('show-image');\r\n    }\r\n  });\r\n};\r\n\r\nconst teamObserver = new IntersectionObserver(handleIntersection, options);\r\nconst observeTeamMember = teamObserver.observe.bind(teamObserver);\r\ndocument.querySelectorAll('article').forEach(observeTeamMember);\r\n"]}