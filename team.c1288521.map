{"version":3,"sources":["src/utils/index.js","src/team.js"],"names":["wait","time","Promise","resolve","setTimeout","throwError","err","Error","$","document","querySelector","bind","$$","selector","querySelectorAll","debounce","fn","timeout","args","later","apply","clearTimeout","shrugMappings","Map","shrug","name","has","console","log","get","delete","updateHash","hash","history","replaceState","title","articles","activeObserver","createObserver","options","rootMargin","Math","floor","window","innerHeight","handleIntersection","entries","forEach","target","isIntersecting","id","classList","add","teamObserver","IntersectionObserver","observeTeamMember","observe","disconnect","onload","addEventListener"],"mappings":"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","file":"team.c1288521.map","sourceRoot":"..","sourcesContent":["/**\r\n * Returned eine Promise, die sich nach gegebener Zeit selbst erfüllt\r\n * @param {number} time Zeit, bis Promise resolved\r\n */\r\nexport const wait = time => new Promise(resolve => setTimeout(resolve, time));\r\n\r\n/**\r\n * Nimmt Error Message und wirft einen Fehler\r\n * @param {string} err Fehlermeldung\r\n */\r\nexport const throwError = err => {\r\n  throw Error(err);\r\n};\r\n\r\n/**\r\n * Alias zu querySelector(), nimmt CSS Selektor, liefert HTML Element oder null\r\n * @type {Function}\r\n * @param {string} selector CSS3 Selektor\r\n * @returns {HTMLElement|null} Element oder Array aus Elementen\r\n */\r\nexport const $ = document.querySelector.bind(document);\r\n/**\r\n * Wrapper um querySelectorAll(), liefert Array statt NodeList\r\n * @param {string} selector CSS3 Selektor\r\n * @returns {Array<HTMLElement>} Array aus gefundenen Elementen\r\n */\r\nexport const $$ = selector => [...document.querySelectorAll(selector)];\r\n\r\n/**\r\n * Führt eine Funktion erst aus, wenn sie eine Zeit lang nicht ausgeführt wurde\r\n * @param {Function} fn Funktion, die debounced werden soll\r\n * @param {number} wait Zeit, die vergangen sein muss bevor fn ausgeführt wird\r\n */\r\nexport const debounce = (fn, wait = 0) => {\r\n  let timeout;\r\n\r\n  return function(...args) {\r\n    const later = () => {\r\n      timeout = null;\r\n      fn.apply(this, args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n};\r\n\r\nconst shrugMappings = new Map([\r\n  // Artikel:\r\n  ['zwischen-seemannsgarn-und-strandgut', `🍺 Kneipentour, for science.`],\r\n  ['bringt-farbe-in-die-stadt', `⚽ Abenteuer in den Graffitiburgen.`],\r\n  ['film-ab-bheaven', `🛰 Doch gab es die Mondlandung wirklich?`],\r\n  ['back-to-print', `🍪 Aber Print hat keine Cookies.`],\r\n  ['projekt-antarktis', `🐧 Pengwings.`],\r\n  [\r\n    'wie-ki-die-designwelt-aendert',\r\n    `🔴 I'm afraid I can't let you do that, Dave.`,\r\n  ],\r\n  // Team\r\n  ['jonas', '✔ Perfekt, trotz Serifen.'],\r\n  ['max', '✔ Ist Photoshop, nicht Paint.'],\r\n]);\r\n\r\nexport const shrug = name => {\r\n  if (!shrugMappings.has(name)) return;\r\n\r\n  console.log(`\\n${shrugMappings.get(name)}`);\r\n  shrugMappings.delete(name);\r\n};\r\n\r\nexport const updateHash = debounce(hash => {\r\n  if (history.replaceState) {\r\n    shrug(hash);\r\n    history.replaceState(null, document.title, `#${hash}`);\r\n  }\r\n}, 500);\r\n","import { $$, debounce, updateHash } from './utils';\r\n\r\nconst articles = $$('article');\r\nlet activeObserver;\r\n\r\nconst createObserver = () => {\r\n  const options = {\r\n    rootMargin: `-${Math.floor(window.innerHeight / 2)}px 0px`,\r\n  };\r\n  const handleIntersection = entries => {\r\n    entries.forEach(({ target, isIntersecting }) => {\r\n      if (isIntersecting) {\r\n        updateHash(target.id);\r\n        target.classList.add('show-image');\r\n      }\r\n    });\r\n  };\r\n\r\n  const teamObserver = new IntersectionObserver(handleIntersection, options);\r\n  const observeTeamMember = teamObserver.observe.bind(teamObserver);\r\n\r\n  if (activeObserver) activeObserver.disconnect();\r\n  articles.forEach(observeTeamMember);\r\n  activeObserver = teamObserver;\r\n};\r\n\r\nwindow.onload = createObserver;\r\nwindow.addEventListener('resize', debounce(createObserver, 400));\r\n"]}